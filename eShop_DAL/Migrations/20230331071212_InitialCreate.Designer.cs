// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop_DAL.Repository;

#nullable disable

namespace eShop_DAL.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    [Migration("20230331071212_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("BasketId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("BasketItem", b =>
                {
                    b.Property<int>("BasketItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketItemId"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BasketItemId");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Games"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Computers"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Music"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Grocery"
                        });
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Carlotta44@gmail.com",
                            FirstName = "Carlotta",
                            LastName = "Franecki",
                            PhoneNumber = "(687) 839-1127 x3666"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Nicklaus.Nienow@hotmail.com",
                            FirstName = "Nicklaus",
                            LastName = "Nienow",
                            PhoneNumber = "303-973-3764 x32044"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Davin_Kuhlman@gmail.com",
                            FirstName = "Davin",
                            LastName = "Kuhlman",
                            PhoneNumber = "206.909.9554 x86645"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Ollie_Leffler38@hotmail.com",
                            FirstName = "Ollie",
                            LastName = "Leffler",
                            PhoneNumber = "(715) 511-5177 x681"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Alta.Beier43@hotmail.com",
                            FirstName = "Alta",
                            LastName = "Beier",
                            PhoneNumber = "255.940.8490"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "Lora.Gaylord@yahoo.com",
                            FirstName = "Lora",
                            LastName = "Gaylord",
                            PhoneNumber = "687-503-7007 x3478"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "Clifford40@gmail.com",
                            FirstName = "Clifford",
                            LastName = "Mayer",
                            PhoneNumber = "1-811-620-1613 x2584"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "Broderick.Franecki@yahoo.com",
                            FirstName = "Broderick",
                            LastName = "Franecki",
                            PhoneNumber = "1-457-674-7180 x1314"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "Nora.Zboncak2@yahoo.com",
                            FirstName = "Nora",
                            LastName = "Zboncak",
                            PhoneNumber = "264.876.2790"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "Jeffrey.Borer@hotmail.com",
                            FirstName = "Jeffrey",
                            LastName = "Borer",
                            PhoneNumber = "582.507.1294 x36198"
                        });
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            ProductId = 13,
                            Url = "https://picsum.photos/640/480/?image=170"
                        },
                        new
                        {
                            ImageId = 2,
                            ProductId = 7,
                            Url = "https://picsum.photos/640/480/?image=240"
                        },
                        new
                        {
                            ImageId = 3,
                            ProductId = 34,
                            Url = "https://picsum.photos/640/480/?image=479"
                        },
                        new
                        {
                            ImageId = 4,
                            ProductId = 42,
                            Url = "https://picsum.photos/640/480/?image=571"
                        },
                        new
                        {
                            ImageId = 5,
                            ProductId = 36,
                            Url = "https://picsum.photos/640/480/?image=900"
                        },
                        new
                        {
                            ImageId = 6,
                            ProductId = 50,
                            Url = "https://picsum.photos/640/480/?image=386"
                        },
                        new
                        {
                            ImageId = 7,
                            ProductId = 6,
                            Url = "https://picsum.photos/640/480/?image=163"
                        },
                        new
                        {
                            ImageId = 8,
                            ProductId = 40,
                            Url = "https://picsum.photos/640/480/?image=248"
                        },
                        new
                        {
                            ImageId = 9,
                            ProductId = 33,
                            Url = "https://picsum.photos/640/480/?image=345"
                        },
                        new
                        {
                            ImageId = 10,
                            ProductId = 31,
                            Url = "https://picsum.photos/640/480/?image=660"
                        },
                        new
                        {
                            ImageId = 11,
                            ProductId = 32,
                            Url = "https://picsum.photos/640/480/?image=818"
                        },
                        new
                        {
                            ImageId = 12,
                            ProductId = 20,
                            Url = "https://picsum.photos/640/480/?image=822"
                        },
                        new
                        {
                            ImageId = 13,
                            ProductId = 42,
                            Url = "https://picsum.photos/640/480/?image=528"
                        },
                        new
                        {
                            ImageId = 14,
                            ProductId = 50,
                            Url = "https://picsum.photos/640/480/?image=229"
                        },
                        new
                        {
                            ImageId = 15,
                            ProductId = 16,
                            Url = "https://picsum.photos/640/480/?image=70"
                        },
                        new
                        {
                            ImageId = 16,
                            ProductId = 20,
                            Url = "https://picsum.photos/640/480/?image=853"
                        },
                        new
                        {
                            ImageId = 17,
                            ProductId = 39,
                            Url = "https://picsum.photos/640/480/?image=428"
                        },
                        new
                        {
                            ImageId = 18,
                            ProductId = 25,
                            Url = "https://picsum.photos/640/480/?image=664"
                        },
                        new
                        {
                            ImageId = 19,
                            ProductId = 11,
                            Url = "https://picsum.photos/640/480/?image=417"
                        },
                        new
                        {
                            ImageId = 20,
                            ProductId = 24,
                            Url = "https://picsum.photos/640/480/?image=56"
                        },
                        new
                        {
                            ImageId = 21,
                            ProductId = 12,
                            Url = "https://picsum.photos/640/480/?image=471"
                        },
                        new
                        {
                            ImageId = 22,
                            ProductId = 1,
                            Url = "https://picsum.photos/640/480/?image=528"
                        },
                        new
                        {
                            ImageId = 23,
                            ProductId = 43,
                            Url = "https://picsum.photos/640/480/?image=651"
                        },
                        new
                        {
                            ImageId = 24,
                            ProductId = 4,
                            Url = "https://picsum.photos/640/480/?image=1044"
                        },
                        new
                        {
                            ImageId = 25,
                            ProductId = 1,
                            Url = "https://picsum.photos/640/480/?image=1028"
                        },
                        new
                        {
                            ImageId = 26,
                            ProductId = 4,
                            Url = "https://picsum.photos/640/480/?image=688"
                        },
                        new
                        {
                            ImageId = 27,
                            ProductId = 48,
                            Url = "https://picsum.photos/640/480/?image=1081"
                        },
                        new
                        {
                            ImageId = 28,
                            ProductId = 27,
                            Url = "https://picsum.photos/640/480/?image=637"
                        },
                        new
                        {
                            ImageId = 29,
                            ProductId = 42,
                            Url = "https://picsum.photos/640/480/?image=530"
                        },
                        new
                        {
                            ImageId = 30,
                            ProductId = 31,
                            Url = "https://picsum.photos/640/480/?image=702"
                        },
                        new
                        {
                            ImageId = 31,
                            ProductId = 27,
                            Url = "https://picsum.photos/640/480/?image=492"
                        },
                        new
                        {
                            ImageId = 32,
                            ProductId = 27,
                            Url = "https://picsum.photos/640/480/?image=838"
                        },
                        new
                        {
                            ImageId = 33,
                            ProductId = 49,
                            Url = "https://picsum.photos/640/480/?image=996"
                        },
                        new
                        {
                            ImageId = 34,
                            ProductId = 20,
                            Url = "https://picsum.photos/640/480/?image=638"
                        },
                        new
                        {
                            ImageId = 35,
                            ProductId = 38,
                            Url = "https://picsum.photos/640/480/?image=542"
                        },
                        new
                        {
                            ImageId = 36,
                            ProductId = 6,
                            Url = "https://picsum.photos/640/480/?image=435"
                        },
                        new
                        {
                            ImageId = 37,
                            ProductId = 8,
                            Url = "https://picsum.photos/640/480/?image=639"
                        },
                        new
                        {
                            ImageId = 38,
                            ProductId = 26,
                            Url = "https://picsum.photos/640/480/?image=198"
                        },
                        new
                        {
                            ImageId = 39,
                            ProductId = 38,
                            Url = "https://picsum.photos/640/480/?image=162"
                        },
                        new
                        {
                            ImageId = 40,
                            ProductId = 33,
                            Url = "https://picsum.photos/640/480/?image=864"
                        },
                        new
                        {
                            ImageId = 41,
                            ProductId = 8,
                            Url = "https://picsum.photos/640/480/?image=949"
                        },
                        new
                        {
                            ImageId = 42,
                            ProductId = 3,
                            Url = "https://picsum.photos/640/480/?image=47"
                        },
                        new
                        {
                            ImageId = 43,
                            ProductId = 37,
                            Url = "https://picsum.photos/640/480/?image=726"
                        },
                        new
                        {
                            ImageId = 44,
                            ProductId = 22,
                            Url = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            ImageId = 45,
                            ProductId = 5,
                            Url = "https://picsum.photos/640/480/?image=197"
                        },
                        new
                        {
                            ImageId = 46,
                            ProductId = 29,
                            Url = "https://picsum.photos/640/480/?image=1083"
                        },
                        new
                        {
                            ImageId = 47,
                            ProductId = 23,
                            Url = "https://picsum.photos/640/480/?image=614"
                        },
                        new
                        {
                            ImageId = 48,
                            ProductId = 45,
                            Url = "https://picsum.photos/640/480/?image=14"
                        },
                        new
                        {
                            ImageId = 49,
                            ProductId = 49,
                            Url = "https://picsum.photos/640/480/?image=504"
                        },
                        new
                        {
                            ImageId = 50,
                            ProductId = 32,
                            Url = "https://picsum.photos/640/480/?image=101"
                        });
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 3,
                            OrderDate = new DateTime(2023, 2, 1, 21, 14, 22, 493, DateTimeKind.Local).AddTicks(5527)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2023, 1, 9, 15, 8, 24, 567, DateTimeKind.Local).AddTicks(2927)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 10, 21, 5, 38, 36, 350, DateTimeKind.Local).AddTicks(1828)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 9,
                            OrderDate = new DateTime(2022, 9, 20, 3, 43, 9, 171, DateTimeKind.Local).AddTicks(9822)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 8,
                            OrderDate = new DateTime(2022, 6, 1, 14, 45, 43, 827, DateTimeKind.Local).AddTicks(7039)
                        },
                        new
                        {
                            OrderId = 6,
                            CustomerId = 10,
                            OrderDate = new DateTime(2022, 11, 21, 8, 34, 18, 367, DateTimeKind.Local).AddTicks(1594)
                        },
                        new
                        {
                            OrderId = 7,
                            CustomerId = 2,
                            OrderDate = new DateTime(2023, 2, 4, 9, 0, 25, 632, DateTimeKind.Local).AddTicks(6491)
                        },
                        new
                        {
                            OrderId = 8,
                            CustomerId = 8,
                            OrderDate = new DateTime(2023, 1, 6, 19, 0, 30, 655, DateTimeKind.Local).AddTicks(5588)
                        },
                        new
                        {
                            OrderId = 9,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 12, 5, 3, 7, 15, 589, DateTimeKind.Local).AddTicks(3385)
                        },
                        new
                        {
                            OrderId = 10,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 8, 21, 1, 44, 3, 100, DateTimeKind.Local).AddTicks(1016)
                        },
                        new
                        {
                            OrderId = 11,
                            CustomerId = 7,
                            OrderDate = new DateTime(2022, 6, 29, 4, 30, 4, 478, DateTimeKind.Local).AddTicks(210)
                        },
                        new
                        {
                            OrderId = 12,
                            CustomerId = 4,
                            OrderDate = new DateTime(2022, 6, 27, 15, 45, 8, 107, DateTimeKind.Local).AddTicks(6324)
                        },
                        new
                        {
                            OrderId = 13,
                            CustomerId = 9,
                            OrderDate = new DateTime(2022, 10, 4, 10, 39, 14, 569, DateTimeKind.Local).AddTicks(9592)
                        },
                        new
                        {
                            OrderId = 14,
                            CustomerId = 10,
                            OrderDate = new DateTime(2023, 1, 13, 7, 35, 4, 683, DateTimeKind.Local).AddTicks(3197)
                        },
                        new
                        {
                            OrderId = 15,
                            CustomerId = 4,
                            OrderDate = new DateTime(2023, 3, 7, 19, 18, 22, 43, DateTimeKind.Local).AddTicks(8377)
                        },
                        new
                        {
                            OrderId = 16,
                            CustomerId = 4,
                            OrderDate = new DateTime(2022, 6, 17, 6, 54, 25, 263, DateTimeKind.Local).AddTicks(4392)
                        },
                        new
                        {
                            OrderId = 17,
                            CustomerId = 8,
                            OrderDate = new DateTime(2022, 11, 7, 4, 47, 24, 444, DateTimeKind.Local).AddTicks(3414)
                        },
                        new
                        {
                            OrderId = 18,
                            CustomerId = 5,
                            OrderDate = new DateTime(2022, 8, 19, 17, 22, 19, 241, DateTimeKind.Local).AddTicks(7314)
                        },
                        new
                        {
                            OrderId = 19,
                            CustomerId = 3,
                            OrderDate = new DateTime(2022, 11, 11, 0, 17, 35, 752, DateTimeKind.Local).AddTicks(5014)
                        },
                        new
                        {
                            OrderId = 20,
                            CustomerId = 5,
                            OrderDate = new DateTime(2023, 3, 12, 7, 18, 47, 378, DateTimeKind.Local).AddTicks(7866)
                        });
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4,
                            Description = "Odio nam non quo.",
                            Name = "Rustic Concrete Bike",
                            Price = 83.12073893012509300m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            Description = "Repellendus voluptatem rerum est.",
                            Name = "Tasty Wooden Computer",
                            Price = 62.14230838052108200m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Non doloribus et corporis repellendus iure qui assumenda laborum.",
                            Name = "Handmade Cotton Shoes",
                            Price = 49.31449137363326500m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "Corrupti perferendis animi nulla.",
                            Name = "Small Granite Table",
                            Price = 96.30990772056859600m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            Description = "A officia occaecati corrupti dolorem est id qui sed est.",
                            Name = "Small Rubber Car",
                            Price = 53.03149088240758600m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            Description = "Ea odit officia qui sit sint voluptatem maxime.",
                            Name = "Generic Cotton Shoes",
                            Price = 79.9037150339706400m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            Description = "Quisquam reprehenderit iusto sit explicabo repellat natus error.",
                            Name = "Rustic Steel Car",
                            Price = 45.39610054362379600m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            Description = "Aliquam culpa natus quia id non voluptatum at.",
                            Name = "Practical Frozen Computer",
                            Price = 77.72979309211008100m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 4,
                            Description = "Corporis quos quo vero velit in voluptatem velit.",
                            Name = "Handmade Steel Chair",
                            Price = 41.32004616098479900m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            Description = "Ab amet et neque iure.",
                            Name = "Awesome Wooden Keyboard",
                            Price = 30.0569480322566500m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            Description = "Distinctio aut quisquam aliquam provident natus quisquam.",
                            Name = "Practical Wooden Bike",
                            Price = 71.3466254637328600m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 5,
                            Description = "Eum sequi laudantium.",
                            Name = "Ergonomic Fresh Car",
                            Price = 76.49448791634966700m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 4,
                            Description = "Sunt eos et iusto.",
                            Name = "Handmade Granite Chair",
                            Price = 71.53853069177754400m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5,
                            Description = "Sunt nobis corrupti nemo reiciendis quam.",
                            Name = "Handmade Frozen Chair",
                            Price = 42.38993594441094400m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5,
                            Description = "Voluptates iusto quis eligendi ratione.",
                            Name = "Ergonomic Soft Computer",
                            Price = 91.27560081532019500m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 2,
                            Description = "Rerum veniam repellat facere quos iure rerum sit.",
                            Name = "Ergonomic Granite Keyboard",
                            Price = 61.88873156061800500m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 3,
                            Description = "Nemo et quisquam aspernatur suscipit possimus sit cupiditate ad veniam.",
                            Name = "Tasty Granite Chair",
                            Price = 56.95427185993374400m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 1,
                            Description = "Quia quidem doloremque eos.",
                            Name = "Intelligent Plastic Chips",
                            Price = 42.58184117245572700m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3,
                            Description = "Et ut qui labore dolores repellat quas iste.",
                            Name = "Handcrafted Soft Computer",
                            Price = 37.52107937565125500m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 5,
                            Description = "Totam non qui voluptates autem exercitationem exercitationem voluptas.",
                            Name = "Unbranded Rubber Cheese",
                            Price = 65.84525356248270100m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 4,
                            Description = "Ea non libero nam et nemo rerum voluptas iusto eaque.",
                            Name = "Licensed Fresh Shoes",
                            Price = 72.42808208494825900m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 2,
                            Description = "Autem optio et debitis officiis ut.",
                            Name = "Handcrafted Granite Fish",
                            Price = 30.00942633348020800m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 2,
                            Description = "Modi et veritatis blanditiis.",
                            Name = "Generic Soft Table",
                            Price = 4.836622430866871800m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 1,
                            Description = "Animi eum accusamus architecto provident nam fuga.",
                            Name = "Tasty Fresh Shirt",
                            Price = 16.85463078918614500m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 3,
                            Description = "Non et autem.",
                            Name = "Fantastic Concrete Pizza",
                            Price = 29.82120748321582900m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 2,
                            Description = "Odit cumque quia distinctio adipisci voluptatum totam cupiditate veniam.",
                            Name = "Rustic Frozen Ball",
                            Price = 8.085315227548274200m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 4,
                            Description = "Sit culpa voluptatem qui qui molestiae modi quam.",
                            Name = "Small Concrete Pizza",
                            Price = 51.47768444590164700m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 5,
                            Description = "Eligendi aspernatur ab delectus fugiat corrupti.",
                            Name = "Handcrafted Concrete Cheese",
                            Price = 96.39829605463814800m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 5,
                            Description = "Possimus eaque mollitia sequi qui et facilis similique officia.",
                            Name = "Ergonomic Fresh Salad",
                            Price = 70.41502348306352200m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 2,
                            Description = "Id consequatur magnam non quidem officia qui.",
                            Name = "Sleek Soft Keyboard",
                            Price = 98.2730492894878300m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 2,
                            Description = "Corrupti rerum sint praesentium distinctio rem beatae porro.",
                            Name = "Rustic Steel Soap",
                            Price = 21.49096946208320800m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 3,
                            Description = "Quis ex minus.",
                            Name = "Refined Wooden Shirt",
                            Price = 81.37885129935057100m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 4,
                            Description = "Ipsum facilis laborum ut.",
                            Name = "Gorgeous Rubber Shirt",
                            Price = 44.93119650703448500m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 3,
                            Description = "Neque sit explicabo.",
                            Name = "Tasty Fresh Bike",
                            Price = 68.22280048542790600m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 2,
                            Description = "Atque repellat non delectus et odio et ipsum tempore.",
                            Name = "Generic Fresh Table",
                            Price = 20.96592653587737700m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 1,
                            Description = "Vel voluptas animi sint repudiandae quia.",
                            Name = "Incredible Granite Bacon",
                            Price = 19.15601185669932100m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 2,
                            Description = "Dolores nobis qui.",
                            Name = "Incredible Metal Keyboard",
                            Price = 95.70534987827079100m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 5,
                            Description = "Enim aliquid repellendus eius aut minus accusantium est id.",
                            Name = "Generic Metal Sausages",
                            Price = 85.08386606959810900m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 3,
                            Description = "Minima vel molestiae quo ipsam et aut dolorem ut.",
                            Name = "Refined Plastic Salad",
                            Price = 52.3057271201655400m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 1,
                            Description = "Officiis ut nostrum neque magni maiores ipsum ut aut.",
                            Name = "Tasty Soft Mouse",
                            Price = 65.1321977168006200m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 3,
                            Description = "Quae quas ea eum possimus aut.",
                            Name = "Small Steel Pizza",
                            Price = 48.20773901101558300m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 2,
                            Description = "Nulla quisquam autem nam.",
                            Name = "Generic Metal Shoes",
                            Price = 19.94737003787762200m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 1,
                            Description = "Rerum distinctio minus libero assumenda.",
                            Name = "Small Soft Fish",
                            Price = 82.75272973196239900m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 3,
                            Description = "Ea ex accusantium est dolores repellendus.",
                            Name = "Handcrafted Wooden Keyboard",
                            Price = 92.47568795386506100m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 2,
                            Description = "Labore dolorum quo vero aut nihil corporis est fugit amet.",
                            Name = "Handcrafted Wooden Ball",
                            Price = 10.57228907829723100m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 2,
                            Description = "Illum doloribus quo aliquam.",
                            Name = "Handmade Cotton Shoes",
                            Price = 39.726063120982600m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 4,
                            Description = "Numquam voluptatibus sapiente ut voluptatum quod non quia corporis.",
                            Name = "Practical Cotton Bike",
                            Price = 62.95807823443697800m,
                            SupplierId = 3
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 1,
                            Description = "Non voluptate nobis quae.",
                            Name = "Refined Metal Ball",
                            Price = 51.43203216718143400m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 2,
                            Description = "Pariatur nemo tempore et animi velit deleniti iste.",
                            Name = "Refined Wooden Towels",
                            Price = 13.84123298052756700m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 3,
                            Description = "Ipsum similique sed quaerat.",
                            Name = "Unbranded Steel Bike",
                            Price = 88.16545771815138400m,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Name = "Franecki Inc"
                        },
                        new
                        {
                            SupplierId = 2,
                            Name = "Kiehn LLC"
                        },
                        new
                        {
                            SupplierId = 3,
                            Name = "Smitham - Simonis"
                        });
                });

            modelBuilder.Entity("Basket", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithOne("Basket")
                        .HasForeignKey("Basket", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BasketItem", b =>
                {
                    b.HasOne("Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.HasOne("Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.Navigation("Basket");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
