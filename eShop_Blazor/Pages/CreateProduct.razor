@page "/create"
@using System.Net.Http.Json
@inject HttpClient Http
@inject ProductService ProductService
@inject CategoryService CategoryService
@inject SupplierService SupplierService
@inject NavigationManager NavigationManager

<h1>Create New Product</h1>

<form>
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" class="form-control" id="name" @bind="product.Name" />
    </div>
    <div class="form-group">
        <label for="description">Description:</label>
        <textarea class="form-control" id="description" @bind="product.Description"></textarea>
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <input type="number" class="form-control" id="price" @bind="product.Price" />
    </div>
    <div class="form-group">
        <label for="category">Category:</label>
        <select class="form-control" id="category" @bind="product.CategoryId">
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="supplier">Supplier:</label>
        <select class="form-control" id="supplier" @bind="product.SupplierId">
            @foreach (var supplier in suppliers)
            {
                <option value="@supplier.SupplierId">@supplier.Name</option>
            }
        </select>
    </div>
    <button type="button" class="btn btn-primary" @onclick="Create">Create</button>
</form>

@code {
    private Product product = new Product();
    private List<Category> categories = new List<Category>();
    private List<Supplier> suppliers = new List<Supplier>();

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetAllCategoriesAsync();
        suppliers = await SupplierService.GetAllSuppliersAsync();
    }

    private async Task Create()
    {
        await Http.PostAsJsonAsync("api/products/create", product);
        NavigationManager.NavigateTo("/");
    }
}
